{"version":3,"sources":["Components/Profile/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","assets/images/user1.jpg","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/ProfileDataForm.jsx","Components/Profile/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","alt","src","user1","message","like","maxLength10","maxLengthCreator","MyPosts","React","memo","postElements","posts","map","p","key","id","likesCount","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","input","meta","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","profile","error","createField","Input","type","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","descriptionBlock","photos","large","userPhoto","mainPhoto","target","files","length","profileData","initialValues","formData","then","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f740b54f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2z2y_\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1XOP2\",\"contact\":\"ProfileInfo_contact__3YpmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__330wF\",\"postsBlock\":\"MyPosts_postsBlock__50n73\",\"posts\":\"MyPosts_posts__2ZZs_\"};","module.exports = __webpack_public_path__ + \"static/media/user1.1abe3477.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2QbXR\"};","import React from 'react';\r\nimport user1 from './../../../../assets/images/user1.jpg';\r\nimport s from './Post.module.css';\r\n\r\nconst Post=(props)=>{\r\n\r\n return ( \r\n<div className={s.item}><img alt='user' src={user1}/>\r\n{props.message}\r\n<div><span>like: {props.like}</span></div>\r\n\r\n</div>\r\n )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nconst maxLength10=maxLengthCreator(10);\r\nconst MyPosts=React.memo(props=>{\r\nlet postElements=props.posts.map((p)=> <Post key={p.id} message={p.message} like={p.likesCount}/>);   \r\nlet onAddPost=(values) =>{\r\n  props.addPost(values.newPostText)\r\n  };    \r\n return (\r\n  <div className={s.postsBlock}>\r\n    <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n    {postElements}\r\n      </div>\r\n    </div>\r\n )\r\n})\r\nlet AddNewPostForm=({input, meta, ...props})=>{\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea} name='newPostText' validate={[required, maxLength10]} placeholder='Post message'/>\r\n          </div>\r\n        <div>\r\n          <button>Add post</button></div>\r\n        </form>\r\n  )\r\n}\r\nlet AddNewPostFormRedux=reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport MyPosts from \"./MyPosts\"\r\nconst mapStateToProps=(state)=>{\r\nreturn{\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n}\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    addPost: (newPostText)=>{\r\n    dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\nconst MyPostsContainer=connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nconst ProfileStatusWithHooks=(props)=>{\r\n let [editMode, setEditMode]=useState(false);\r\n let [status, setStatus]=useState(props.status);\r\n useEffect(()=>{\r\n setStatus(props.status); \r\n }, [props.status])\r\n const activateEditMode=()=>{\r\n setEditMode(true);\r\n }\r\n const deactivateEditMode=()=>{\r\n setEditMode(false);\r\n props.updateStatus(status);\r\n }\r\n const onStatusChange=(e)=>{\r\n setStatus(e.currentTarget.value);\r\n }\r\n return (\r\n   <div>\r\n     {!editMode&&\r\n     <div>\r\n  <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status||'------'}</span>\r\n    </div>\r\n  }\r\n  {editMode&&\r\n    <div>\r\n   <input  onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}></input>\r\n    </div>\r\n  }\r\n    </div>\r\n )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\nconst ProfileDataForm=({handleSubmit, profile, error})=>{\r\nreturn <form onSubmit={handleSubmit}>\r\n  <div><button>save</button></div>\r\n\r\n  <div>\r\n  <b>Full name:</b> {createField('Full name', 'fullName', [], Input)}\r\n   </div>\r\n <div>\r\n  <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n   </div>\r\n   <div>\r\n  <b>My professional skills:</b> {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n   </div>\r\n   <div>\r\n   <b>About me:</b> {createField('About me', 'aboutMe', [], Textarea)}\r\n   </div>\r\n   <div>\r\n <b>Contacts</b> {Object.keys(profile.contacts).map(key=>{\r\n     return <div className={s.contact}>\r\n       <b>{key}: {createField(key, 'contacts.'+key, [], Input)}</b>\r\n     </div>\r\n   })}\r\n   </div>\r\n   </form>\r\n  }\r\n  const ProfileDataFormReduxForm=reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n  export default ProfileDataFormReduxForm;","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nconst ProfileInfo =({profile, status, updateStatus, isOwner,  savePhoto, saveProfile})=>{\r\n  let [editMode, setEditMode]=useState(false);\r\n if(!profile){\r\n   return null;\r\n }\r\n const onMainPhotoSelected=(e)=>{\r\nif(e.target.files.length){\r\n  savePhoto(e.target.files[0])\r\n}\r\n }\r\nconst onSubmit=(formData)=>{\r\nsaveProfile(formData).then(\r\n  ()=>{\r\n    setEditMode(false);\r\n  }\r\n)\r\n}\r\n return (\r\n   <div className={s.descriptionBlock}>\r\n  <p><img alt='userPhoto' src={profile.photos.large||userPhoto} className={s.mainPhoto}/></p>\r\n   <div> {isOwner&&<input type='file' onChange={onMainPhotoSelected}/>}\r\n    {editMode?<ProfileDataForm className={s.profileData} initialValues={profile} profile={profile} onSubmit={onSubmit}/>:<ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=>{setEditMode(true)}}/>}\r\n   <ProfileStatusWithHooks status={status} updateStatus={updateStatus} /></div>\r\n   </div>\r\n    \r\n )\r\n}\r\nconst ProfileData=({profile, isOwner, goToEditMode})=>{\r\n return <div>\r\n  {isOwner&&<div><button onClick={goToEditMode}>edit</button></div>}\r\n  <div>\r\n  <b>Full name:</b> {profile.fullName}\r\n   </div>\r\n <div>\r\n  <b>Looking for a job:</b> {profile.lookingForAJob? 'yes': 'no'}\r\n   </div>\r\n   {profile.lookingForAJobDescription&&\r\n   <div>\r\n  <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n   </div>\r\n}\r\n   <div>\r\n   <b>About me:</b> {profile.aboutMe}\r\n   </div>\r\n   <div>\r\n   <b>Contacts</b> {Object.keys(profile.contacts).map(key=>{\r\n     return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n   })}\r\n   </div>\r\n   </div>\r\n}\r\nconst Contact=({contactTitle, contactValue})=>{\r\nreturn <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo';\r\nconst Profile =(props)=>{\r\nreturn (\r\n<div>\r\n  <ProfileInfo  \r\n  savePhoto={props.saveProfile}\r\n  isOwner={props.isOwner} \r\n                savePhoto={props.savePhoto} \r\n                saveProfile={props.saveProfile} \r\n                profile={props.profile} \r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n  <MyPostsContainer/>  \r\n </div>\r\n )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends React.Component{\r\nrefreshProfile(){\r\n    let userId=this.props.match.params.userId;\r\n  if(!userId){\r\n    userId=this.props.authorizedUserId;\r\n  if(!userId){\r\n    this.props.history.push('/login');\r\n  }\r\n}\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n}\r\n componentDidMount(){\r\n   this.refreshProfile();\r\n }\r\n componentDidUpdate(prevProps, prevState, snapshot){\r\n   if(this.props.match.userId!=prevProps.match.userId){\r\n     this.refreshProfile();\r\n   }\r\n }\r\nrender(){\r\nreturn (\r\n<Profile {...this.props} \r\nisOwner={!this.props.match.params.userId}\r\nprofile={this.props.profile} \r\nstatus={this.props.status}\r\nupdateStatus={this.props.updateStatus}\r\nsavePhoto={this.props.savePhoto}/>\r\n )\r\n}\r\n}\r\nlet mapStateToProps=(state)=>({\r\n profile: state.profilePage.profile,\r\n status: state.profilePage.status,\r\n authorizedUserId: state.auth.userId,\r\n isAuth: state.auth.isAuth\r\n})\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter\r\n  )(ProfileContainer);"],"sourceRoot":""}