{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/AddMessageForm.jsx","Components/Dialogs/DialogItem/DialogIem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","DialogItem","path","id","className","s","dialog","active","to","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messageElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qICG7MC,EAAYC,YAAiB,IAWpBC,cAAU,CACrBC,KAAM,2BADKD,EAVM,SAACE,GAClB,OACA,0BAAMC,SAAUD,EAAME,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUX,GACrBY,KAAK,iBAAiBC,YAAY,uBACvC,6BAAK,6C,0BCFOC,EALE,SAACV,GACd,IAAIW,EAAK,YAAYX,EAAMY,GAC3B,OAAO,yBAAKC,UAAWC,IAAEC,OAAQ,IAAID,IAAEE,QAAQ,kBAAC,IAAD,CAASC,GAAIN,GAAOX,EAAMQ,QCD9DU,EAHD,SAAClB,GACX,OAAO,yBAAKa,UAAWC,IAAEK,SAAUnB,EAAMmB,UC6B9BC,EAxBD,SAACpB,GAEX,IAAIqB,EAAMrB,EAAMsB,YACZC,EAAgBF,EAAMG,QAAQC,KAAI,SAACC,GAAK,OAAO,kBAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAMI,GAAIc,EAAEd,GAAIe,IAAKD,EAAEd,QAC1FgB,EAAgBP,EAAMQ,SAASJ,KAAI,SAACK,GAAK,OAAO,kBAAC,EAAD,CAASX,QAASW,EAAEX,QAASQ,IAAKG,EAAElB,QACrES,EAAMU,eAMzB,OAAK/B,EAAMgC,OAEX,yBAAKnB,UAAWC,IAAEU,SACtB,yBAAKX,UAAWC,IAAEmB,cACjBV,GAED,yBAAKV,UAAWC,IAAEe,UACf,6BAAMD,EAAN,KACA,kBAAC,EAAD,CAAgB3B,SAXG,SAACiC,GACflC,EAAMmC,YAAYD,EAAOH,qBAEH,kBAAC,IAAD,CAAUd,GAAI,YCC7BmB,sBACXC,aAdkB,SAAChB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAM,CACFH,YAAa,SAACJ,GACtBO,EAASC,YAAmBR,SAOxBS,IAFWJ,CAGbhB","file":"static/js/4.8d17002d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3jbK2\",\"dialogsItems\":\"Dialogs_dialogsItems__ed5m4\",\"active\":\"Dialogs_active__ZcQHs\",\"dialog\":\"Dialogs_dialog__1rWxQ\",\"messages\":\"Dialogs_messages__1tdIQ\",\"message\":\"Dialogs_message__3K3Z7\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nconst maxLength50=maxLengthCreator(50);\r\nconst AddMessageForm=(props)=>{\r\n    return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} \r\n        validate={[required, maxLength50 ]}\r\n        name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n   <div><button>Send</button></div>\r\n</form>\r\n    )\r\n}\r\nexport default reduxForm({\r\n    form: \"dialog=add-message-form\"\r\n})(AddMessageForm);","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem=(props)=>{\r\n    let path=\"/dialogs/\"+props.id;\r\n    return <div className={s.dialog +\" \"+s.active}><NavLink to={path}>{props.name}</NavLink></div>\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n  ","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nconst Message=(props)=>{\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\nexport default Message;\r\n\r\n\r\n  ","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nimport DialogItem from \"./DialogItem/DialogIem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nconst Dialogs=(props)=>{   \r\n    \r\n    let state=props.dialogsPage;\r\n    let dialogsElements=state.dialogs.map((d)=>{return(<DialogItem name={d.name} id={d.id} key={d.id}/>)})\r\n    let messageElements=state.messages.map((m)=>{return(<Message message={m.message} key={m.id}/>)})   \r\n    let newMessageBody=state.newMessageBody;   \r\n\r\n   \r\n    let addNewMessage=(values)=>{\r\n        props.sendMessage(values.newMessageBody)\r\n            }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\nreturn(\r\n    <div className={s.dialogs} >\r\n<div className={s.dialogsItems}>\r\n{dialogsElements}\r\n</div>\r\n<div className={s.messages}>\r\n   <div>{messageElements} </div>\r\n   <AddMessageForm onSubmit={addNewMessage}/>\r\n</div>\r\n    </div>\r\n)\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\"\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        sendMessage: (newMessageBody)=>{\r\ndispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}